# Stage 1: Builder - install dependencies and build the application
FROM node:24-alpine AS builder

# Enable pnpm
RUN corepack enable && corepack prepare pnpm@latest --activate

# Set working directory
WORKDIR /app

# Copy package files first for caching
COPY package.json pnpm-lock.yaml ./

# Install production dependencies (no devDependencies)
RUN pnpm install --prod --frozen-lockfile

# Copy the rest of the files
COPY . .

# Build the application
RUN pnpm build

# Stage 2: Runner - create lightweight production image
FROM node:24-alpine AS runner

# Enable pnpm
RUN corepack enable && corepack prepare pnpm@latest --activate

# Set working directory
WORKDIR /app

# Copy from builder
COPY --from=builder /app/package.json /app/pnpm-lock.yaml ./
COPY --from=builder /app/.next/standalone ./
COPY --from=builder /app/.next/static ./.next/static
COPY --from=builder /app/public ./public

# Create non-root user and switch to it
RUN addgroup --system --gid 1001 nodejs && \
    adduser --system --uid 1001 nextjs
USER nextjs

# Expose port 3000 (Next.js default)
EXPOSE 3000

# Environment variables for production
ENV NODE_ENV=production
ENV PORT=3000

# Start Next.js in production mode
CMD ["node", "server.js"]